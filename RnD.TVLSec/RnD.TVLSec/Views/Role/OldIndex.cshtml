@{
    ViewBag.Title = "Role";
}
<div id="indexPage">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <a href="@Url.Action("Add", "Role")" title="Add" class="btn btn-primary btn-sm btn-flat" id="lnkAddCommon">
                        <i class="fa fa-plus"></i>&nbsp;&nbsp;Add</a></div>
                <!-- /.box-header -->
                <div class="box-body table-responsive">
                    <div id="gridZone">
                        <div id="gridRole">
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
    </div>
</div>
<script type="text/javascript">

    //-----------------------------------------------------
    //start Refresh Kendo Grid Funtion For Index Page
    function KendoGridRefreshInIndexPage() {
        //Get Grid
        var kdGrid = $('#gridRole').data('kendoGrid');
        kdGrid.dataSource.read();
    }
    //-----------------------------------------------------
    //end Refresh Kendo Grid Funtion For Index Page

    //-----------------------------------------------------
    //start Kendo Treeview Get All Data Funtion

    function GetKendoTreeviewChildDataList(nodes) {

        var treeViewNodeDataList = [];

        for (var i = 0; i < nodes.length; i++) {

            if (nodes[i].checked) {

                var treeViewNodeData = {};

                var id = nodes[i].id;
                var text = nodes[i].text;

                treeViewNodeData.Id = id;
                treeViewNodeData.Text = text;

                treeViewNodeDataList.push(treeViewNodeData);

            } //end if

        } //end for

        return treeViewNodeDataList;

    }



    function GetKendoTreeviewDataList(nodes) {

        var treeViewNodeDataList = [];

        for (var i = 0; i < nodes.length; i++) {

            var treeViewNodeData = {};

            if (nodes[i].hasChildren) {

                //                var nodesChildList = nodes[i].children.view();
                var nodesChildList = nodes[i].children.data();

                console.log("hasChildren");
                //console.log(nodes[i]);
                //console.log(nodes[i].children);
                //console.log(nodes[i].children.view());
                console.log(nodes[i].children.data());

                console.log(nodesChildList);

                //var treeViewChildNodeDataList = GetKendoTreeviewChildDataList(nodesChildList);

                //console.log(treeViewChildNodeDataList);

                //                treeViewNodeData.Items = treeViewChildNodeDataList;


            } //end if child

            if (nodes[i].checked) {

                console.log("checked");

                var id = nodes[i].id;
                var text = nodes[i].text;

                treeViewNodeData.Id = id;
                treeViewNodeData.Text = text;

            } //end if



            treeViewNodeDataList.push(treeViewNodeData);

        } //end for

        console.log(treeViewNodeDataList);

        return treeViewNodeDataList;

    }

    //for All Treeview
    function GetKendoTreeviewCheckedNodeDataList(nodes, checkedNodes) {

        console.log(nodes);
        console.log(checkedNodes);

        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                GetKendoTreeviewCheckedNodeDataList(nodes[i].children.view(), checkedNodes);
            }
        }

    }


    //for Menus Treeview
    function GetMenusTreeviewCheckedNodeDataList(nodes, checkedNodes) {

        console.log(nodes);
        console.log(checkedNodes);

        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                GetMenusTreeviewCheckedNodeDataList(nodes[i].children.view(), checkedNodes);
            }
        }

    }

    //for Rights Treeview
    function GetRightsTreeviewCheckedNodeDataList(nodes, checkedNodes) {

        console.log(nodes);
        console.log(checkedNodes);

        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }
        }

    }


    //-----------------------------------------------------
    //end Kendo Treeview Get All Data Funtion

    $(document).ready(function () {

        //-------------------------------------------------------
        //start of kendo grid

        var _id = "#gridRole";
        var _readUrl = '@Url.Action("RoleRead", "Role")';

        $(_id).kendoGrid({
            dataSource: {
                transport: {
                    read: _readUrl
                },
                schema: {
                    data: function (data) {
                        return data.Data;
                    },
                    model: {
                        fields: {
                            RoleId: { type: "number" },
                            RoleName: { type: "string" },
                            Description: { type: "string" },

                            ApplicationId: { type: "number" },
                            ApplicationName: { type: "string" },
                            ModuleId: { type: "number" },
                            ModuleName: { type: "string" },

                            ActionLink: { type: "string" }
                        }
                    }, //end model
                    total: function (data) {
                        return data.Total;
                    }
                },
                //pageSize: 20,
                serverPaging: true,
                serverFiltering: false,
                serverSorting: true
            },
            height: 250,
            filterable: true,
            groupable: true,
            sortable: true,
            resizable: true,
            pageable: {
                refresh: true
            },
            columns: [{ field: "RoleId", title: "RoleId", hidden: true, filterable: false, sortable: false },
                  { field: "RoleName", title: "Role Name" },
                  { field: "Description", title: "Description" },
                  { field: "ApplicationId", title: "ApplicationId", hidden: true, filterable: false, sortable: false },
                  { field: "ApplicationName", title: "Application Name" },
                  { field: "ModuleId", title: "ModuleId", hidden: true, filterable: false, sortable: false },
                  { field: "ModuleName", title: "Module Name" },

                  { field: "ActionLink", title: "Actions", width: "12%", filterable: false, sortable: false, template: "#= ActionLink #" }
        ]
        });
        //end of kendo grid
        //-------------------------------------------------------

        //-----------------------------------------------------

        $('#btnSubmitRole').live('click', function () {

            var model = {};

            var roleId = $("#RoleId").val();
            var areaName = $("#AreaName").val();
            var controllerName = $("#ControllerName").val();
            var actionName = $("#ActionName").val();
            var roleName = $("#RoleName").val();
            var description = $("#Description").val();
            var applicationId = $("#ApplicationId").data("kendoDropDownList").value();
            var applicationName = $("#ApplicationId").data("kendoDropDownList").text();
            var moduleId = $("#ModuleId").data("kendoDropDownList").value();
            var moduleName = $("#ModuleId").data("kendoDropDownList").text();
            var menuTreeViewList = [];
            var rightTreeViewList = [];

            //Menus

            var tvMenus = $("#treeviewMenus").data("kendoTreeView");
            var tvMenusDataList = tvMenus.dataSource.view();

            //            var tvMenusCheckedNodeList = [];

            //menuTreeViewList = GetKendoTreeviewDataList(tvMenusDataList);
            //GetMenusTreeviewCheckedNodeDataList(tvMenusDataList, menuTreeViewList);
            //console.log(menuTreeViewList);

            for (var i = 0; i < tvMenusDataList.length; i++) {

                if (tvMenusDataList[i].checked) {

                    //                    var menuTreeViewParent = {};

                    //                    var id = tvMenusDataList[i].id;
                    //                    var text = tvMenusDataList[i].text;

                    //                    menuTreeViewParent.Id = id;
                    //                    menuTreeViewParent.Text = text;

                    //                    menuTreeViewList.push(menuTreeViewParent);

                    //                    tvMenusCheckedNodeList.push(tvMenusDataList[i]);

                } //end Parent

                if (tvMenusDataList[i].hasChildren) {

                    var tvMenusChildrenDataList = tvMenusDataList[i].children.view();

                    for (var i = 0; i < tvMenusChildrenDataList.length; i++) {

                        if (tvMenusChildrenDataList[i].checked) {

                            //                            var menuTreeViewChild = {};

                            //                            var id = tvMenusChildrenDataList[i].id;
                            //                            var text = tvMenusChildrenDataList[i].text;

                            //                            menuTreeViewChild.Id = id;
                            //                            menuTreeViewChild.Text = text;

                            //                            menuTreeViewList.push(menuTreeViewChild);

                            //                            tvMenusCheckedNodeList.push(tvMenusChildrenDataList[i]);

                        }

                    }


                } //end Child


            }

            //            console.log(tvMenusCheckedNodeList);

            //Rights

            var tvRights = $("#treeviewRights").data("kendoTreeView");
            var tvRightsDataList = tvRights.dataSource.view();

            //            var tvRightsCheckedNodeList = [];

            //rightTreeViewList = GetKendoTreeviewDataList(tvRightsDataList);
            //GetRightsTreeviewCheckedNodeDataList(tvRightsDataList, rightTreeViewList);
            //console.log(rightTreeViewList);

            for (var i = 0; i < tvRightsDataList.length; i++) {

                if (tvRightsDataList[i].checked) {

                    //                    var rightTreeViewParent = {};

                    //                    var id = tvRightsDataList[i].id;
                    //                    var text = tvRightsDataList[i].text;

                    //                    rightTreeViewParent.Id = id;
                    //                    rightTreeViewParent.Text = text;

                    //                    rightTreeViewList.push(rightTreeViewParent);

                    //                    tvRightsCheckedNodeList.push(tvRightsDataList[i]);

                } //end Parent

            }

            console.log(tvRightsCheckedNodeList);

            model.RoleId = roleId;
            model.AreaName = areaName;
            model.ControllerName = controllerName;
            model.ActionName = actionName;
            model.RoleName = roleName;
            model.Description = description;
            model.ApplicationId = applicationId;
            model.ApplicationName = applicationName;
            model.ModuleId = moduleId;
            model.ModuleName = moduleName;
            model.MenuTreeViewList = menuTreeViewList;
            model.RightTreeViewList = rightTreeViewList;

            console.log(model);

        });


        //-----------------------------------------------------

    });

</script>
