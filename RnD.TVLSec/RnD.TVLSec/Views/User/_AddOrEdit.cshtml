@model RnD.TVLSec.ViewModels.UserViewModel
@using (Ajax.BeginForm(null, null, null, new { @id = "appCommonWindowForm" }))
{
    <div id="addOrEditPage" class="addOrEditPage form-win col-xs-12">
        <div class="row ">
            <div id="updateTargetId" class="callout callout-warning" style="display: none">
            </div>
        </div>
        <div class="row ">
            <div class="col-xs-6">
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.AreaName)
                @Html.HiddenFor(model => model.ControllerName)
                @Html.HiddenFor(model => model.ActionName)
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName)
                    @Html.TextBoxFor(model => model.UserName, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LoginId)
                    @Html.TextBoxFor(model => model.LoginId, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.LoginId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password)
                    @Html.PasswordFor(model => model.Password, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PasswordConfirm)
                    @Html.PasswordFor(model => model.PasswordConfirm, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.PasswordConfirm)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress)
                    @Html.TextBoxFor(model => model.EmailAddress, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.EmailAddress)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone)
                    @Html.TextBoxFor(model => model.Phone, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.Phone)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ChangePasswordAtFirstLogin)
                    <div class="radio">
                        <label class="radio-label">@Html.RadioButtonFor(model => model.ChangePasswordAtFirstLogin, !Model.ChangePasswordAtFirstLogin)
                            <span>Yes</span>
                        </label>
                        <label class="radio-label">@Html.RadioButtonFor(model => model.ChangePasswordAtFirstLogin, Model.ChangePasswordAtFirstLogin)
                            <span>No</span>
                        </label>
                    </div>
                    @Html.ValidationMessageFor(model => model.ChangePasswordAtFirstLogin)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status)
                    <div class="radio">
                        <label class="radio-label">@Html.RadioButtonFor(model => model.Status, !Model.Status)
                            <span>Yes</span>
                        </label>
                        <label class="radio-label">@Html.RadioButtonFor(model => model.Status, Model.Status)
                            <span>No</span>
                        </label>
                    </div>
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
            </div>
            <div class="col-xs-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.GroupId)
                    @Html.DropDownList("GroupId", Model.ddlGroups, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.GroupId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeId)
                    @Html.DropDownList("EmployeeId", Model.ddlEmployees, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.EmployeeId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationId)
                    @Html.DropDownList("ApplicationId", Model.ddlApplications, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.ApplicationId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ModuleId)
                    @Html.TextBoxFor(model => model.ModuleId, new { @style = "width: 95% !important" })
                    @Html.ValidationMessageFor(model => model.ModuleId)
                </div>
                <div id="buttonZone" class="form-group buttonZone">
                    <button type="button" class="btn btn-success btn-sm btn-flat" id="btnSearchGroup"
                        name="btnSearchGroup">
                        <i class="fa fa-search"></i>&nbsp;&nbsp;Search</button>
                </div>
                <div class="form-group">
                    <div id="treeviewScroll" style="width: 280px !important; height: 190px !important;">
                        <div id="buttonExpandCollapseZone" class="buttonZone">
                            <div class="form-group">
                                <button type="button" class="btn btn-primary btn-sm btn-flat" id="btnTreeviewExpand"
                                    name="btnTreeviewExpand">
                                    <i class="fa fa-plus-square-o"></i>&nbsp;&nbsp;Expand All</button>
                                <button type="button" class="btn btn-primary btn-sm btn-flat" id="btnTreeviewCollapse"
                                    name="btnTreeviewCollapse">
                                    <i class="fa fa-minus-square-o"></i>&nbsp;&nbsp;Collapse All</button></div>
                        </div>
                        <div id="treeviewZone">
                            <div class="treeviewRoleZone">
                                <label>
                                    Roles</label>
                                <div id="treeviewRoles">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row form-hr">
            <div id="buttonZone" class="pull-right buttonZone">
                <button type="button" class="btn btn-success btn-sm btn-flat" id="btnSubmitGroup"
                    name="btnSubmitGroup">
                    <i class="fa fa-save"></i>&nbsp;&nbsp;Save</button>
                <button type="button" class="btn btn-warning btn-sm btn-flat" id="btnCancel" name="btnCancel"
                    onclick="CloseAppCommonWindow()">
                    <i class="fa fa-times"></i>&nbsp;&nbsp;Cancel</button>
            </div>
        </div>
    </div>
}
<script type="text/javascript">

    function GetApplicationId() {
        var model = {};
        return model;
    }

    function GetTreeviewRoleParam() {
        var model = {};
        return model;
    }

    function ApplicationOnChange(e) {

        var thisSelectedValue = this.value();
        var thisSelectedText = this.text();
        var module = $("#ModuleId").data("kendoDropDownList");

        if (thisSelectedValue > 0) {

            var model = {};

            model.Value = thisSelectedValue;
            model.Text = thisSelectedText;

            module.dataSource.read(model);
            module.enable();

        }
        else {
            module.enable(false);
        }
    }

    function ModuleOnChange(e) {

        var thisSelectedValue = this.value();
        var thisSelectedText = this.text();
        var applicationId = $("#ApplicationId").data("kendoDropDownList").value();

        if (thisSelectedValue > 0) {

            var model = {};

            model.ApplicationId = applicationId;
            model.ModuleId = thisSelectedValue;

            var treeviewRoles = $("#treeviewRoles").data("kendoTreeView");
            treeviewRoles.dataSource.read(model);

        }
    }

    function RolesOnSelect(e) {
        //this refers to the TreeView object
        var dataItem = this.dataItem(e.node);

        console.log("Selected node with id=" + dataItem.id);
    }

    function LoadRolesTreeview(applicationId, moduleId) {

        if (applicationId > 0 && moduleId > 0) {

            var model = {};

            model.ApplicationId = applicationId;
            model.ModuleId = moduleId;

            var treeviewRoles = $("#treeviewRoles").data("kendoTreeView");
            treeviewRoles.dataSource.read(model);

        }

    }

    $(document).ready(function () {

        var _readApplicationUrl = '@Url.Action("GetApplicationList", "UserGroup")';

        $("#ApplicationId").kendoDropDownList({
            change: ApplicationOnChange
        });

        var _readModuleUrl = '@Url.Action("GetModuleList", "UserGroup")';

        $("#ModuleId").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value",
            change: ModuleOnChange,
            dataSource: {
                transport: {
                    read: {
                        url: _readModuleUrl,
                        data: GetApplicationId
                    }//read
                }//transport
            }//dataSource
        });

        //-----------------------------------------------------
        //start treeview

        var _readTreeviewRoleUrl = '@Url.Action("GetRoleList", "UserGroup")';

        $("#treeviewRoles").kendoTreeView({
            checkboxes: {
                checkChildren: true,
                template: "<input type='checkbox' id='tvRoleCheckbox_#=item.Id#' class='tvRoleCheckbox' name='tvRoleCheckbox' model_id='#=item.Id#' model_text='#=item.Text#' model_checked='#=item.IsChecked#' model_parent_id='#=item.ParentId#' value='#=item.Id#' #if(item.IsChecked == 'True'){# checked #}else{#  #}# />"
            },
            dataTextField: "Text",
            dataValueField: "Id",
            //dataTextField: "text",
            //dataValueField: "id",
            //select: MenusOnSelect,
            dataSource: {
                schema: {
                    model: {
                        id: "Id",
                        text: "Text",
                        checked: "IsChecked",
                        parent_id: "ParentId",
                        children: "Items"
                    }
                }, //schema
                transport: {
                    read: {
                        url: _readTreeviewRoleUrl,
                        data: GetTreeviewRoleParam
                    }//read
                }//transport
            }//dataSource
        });

        $('#btnTreeviewExpand').live('click', function () {
            $("#treeviewRoles").data("kendoTreeView").expand(".k-item");
        });

        $('#btnTreeviewCollapse').live('click', function () {
            $("#treeviewRoles").data("kendoTreeView").collapse(".k-item");
        });

        $('#btnSearchGroup').live('click', function () {

            var applicationId = $("#ApplicationId").data("kendoDropDownList").value();
            var moduleId = $("#ModuleId").data("kendoDropDownList").value();

            LoadRolesTreeview(applicationId, moduleId);

        });

        //end treeview
        //-----------------------------------------------------

    });

</script>
